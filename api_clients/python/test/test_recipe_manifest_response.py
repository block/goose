# coding: utf-8

"""
    goose-server

    An AI agent

    The version of the OpenAPI document: 1.9.0
    Contact: ai-oss-tools@block.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from goose_api.models.recipe_manifest_response import RecipeManifestResponse

class TestRecipeManifestResponse(unittest.TestCase):
    """RecipeManifestResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecipeManifestResponse:
        """Test RecipeManifestResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecipeManifestResponse`
        """
        model = RecipeManifestResponse()
        if include_optional:
            return RecipeManifestResponse(
                id = '',
                is_global = True,
                last_modified = '',
                name = '',
                recipe = goose_api.models.recipe.Recipe(
                    activities = [
                        ''
                        ], 
                    author = null, 
                    context = [
                        ''
                        ], 
                    description = '', 
                    extensions = [
                        null
                        ], 
                    instructions = '', 
                    parameters = [
                        goose_api.models.recipe_parameter.RecipeParameter(
                            default = '', 
                            description = '', 
                            input_type = 'string', 
                            key = '', 
                            options = [
                                ''
                                ], 
                            requirement = 'required', )
                        ], 
                    prompt = '', 
                    response = null, 
                    retry = null, 
                    settings = null, 
                    sub_recipes = [
                        goose_api.models.sub_recipe.SubRecipe(
                            description = '', 
                            name = '', 
                            path = '', 
                            sequential_when_repeated = True, 
                            values = {
                                'key' : ''
                                }, )
                        ], 
                    title = '', 
                    version = '', )
            )
        else:
            return RecipeManifestResponse(
                id = '',
                is_global = True,
                last_modified = '',
                name = '',
                recipe = goose_api.models.recipe.Recipe(
                    activities = [
                        ''
                        ], 
                    author = null, 
                    context = [
                        ''
                        ], 
                    description = '', 
                    extensions = [
                        null
                        ], 
                    instructions = '', 
                    parameters = [
                        goose_api.models.recipe_parameter.RecipeParameter(
                            default = '', 
                            description = '', 
                            input_type = 'string', 
                            key = '', 
                            options = [
                                ''
                                ], 
                            requirement = 'required', )
                        ], 
                    prompt = '', 
                    response = null, 
                    retry = null, 
                    settings = null, 
                    sub_recipes = [
                        goose_api.models.sub_recipe.SubRecipe(
                            description = '', 
                            name = '', 
                            path = '', 
                            sequential_when_repeated = True, 
                            values = {
                                'key' : ''
                                }, )
                        ], 
                    title = '', 
                    version = '', ),
        )
        """

    def testRecipeManifestResponse(self):
        """Test RecipeManifestResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
