# coding: utf-8

"""
    goose-server

    An AI agent

    The version of the OpenAPI document: 1.9.0
    Contact: ai-oss-tools@block.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from goose_api.models.list_schedules_response import ListSchedulesResponse

class TestListSchedulesResponse(unittest.TestCase):
    """ListSchedulesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSchedulesResponse:
        """Test ListSchedulesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSchedulesResponse`
        """
        model = ListSchedulesResponse()
        if include_optional:
            return ListSchedulesResponse(
                jobs = [
                    goose_api.models.scheduled_job.ScheduledJob(
                        cron = '', 
                        current_session_id = '', 
                        currently_running = True, 
                        execution_mode = '', 
                        id = '', 
                        last_run = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        paused = True, 
                        process_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        source = '', )
                    ]
            )
        else:
            return ListSchedulesResponse(
                jobs = [
                    goose_api.models.scheduled_job.ScheduledJob(
                        cron = '', 
                        current_session_id = '', 
                        currently_running = True, 
                        execution_mode = '', 
                        id = '', 
                        last_run = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        paused = True, 
                        process_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        source = '', )
                    ],
        )
        """

    def testListSchedulesResponse(self):
        """Test ListSchedulesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
