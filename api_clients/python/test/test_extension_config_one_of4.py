# coding: utf-8

"""
    goose-server

    An AI agent

    The version of the OpenAPI document: 1.9.0
    Contact: ai-oss-tools@block.xyz
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from goose_api.models.extension_config_one_of4 import ExtensionConfigOneOf4

class TestExtensionConfigOneOf4(unittest.TestCase):
    """ExtensionConfigOneOf4 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtensionConfigOneOf4:
        """Test ExtensionConfigOneOf4
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtensionConfigOneOf4`
        """
        model = ExtensionConfigOneOf4()
        if include_optional:
            return ExtensionConfigOneOf4(
                available_tools = [
                    ''
                    ],
                bundled = True,
                instructions = '',
                name = '',
                tools = [
                    goose_api.models.tool.Tool(
                        annotations = null, 
                        description = '', 
                        icons = [
                            goose_api.models.icon.Icon(
                                mime_type = '', 
                                sizes = '', 
                                src = '', )
                            ], 
                        input_schema = { }, 
                        name = '', 
                        output_schema = { }, 
                        title = '', )
                    ],
                type = 'frontend'
            )
        else:
            return ExtensionConfigOneOf4(
                name = '',
                tools = [
                    goose_api.models.tool.Tool(
                        annotations = null, 
                        description = '', 
                        icons = [
                            goose_api.models.icon.Icon(
                                mime_type = '', 
                                sizes = '', 
                                src = '', )
                            ], 
                        input_schema = { }, 
                        name = '', 
                        output_schema = { }, 
                        title = '', )
                    ],
                type = 'frontend',
        )
        """

    def testExtensionConfigOneOf4(self):
        """Test ExtensionConfigOneOf4"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
