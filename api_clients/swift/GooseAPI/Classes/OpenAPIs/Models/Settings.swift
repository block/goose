//
// Settings.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Settings: Codable, JSONEncodable, Hashable {

    public var gooseModel: String?
    public var gooseProvider: String?
    public var temperature: Float?

    public init(gooseModel: String? = nil, gooseProvider: String? = nil, temperature: Float? = nil) {
        self.gooseModel = gooseModel
        self.gooseProvider = gooseProvider
        self.temperature = temperature
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case gooseModel = "goose_model"
        case gooseProvider = "goose_provider"
        case temperature
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(gooseModel, forKey: .gooseModel)
        try container.encodeIfPresent(gooseProvider, forKey: .gooseProvider)
        try container.encodeIfPresent(temperature, forKey: .temperature)
    }
}

