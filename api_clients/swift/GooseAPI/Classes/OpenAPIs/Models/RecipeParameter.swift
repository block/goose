//
// RecipeParameter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RecipeParameter: Codable, JSONEncodable, Hashable {

    public var _default: String?
    public var description: String
    public var inputType: RecipeParameterInputType
    public var key: String
    public var options: [String]?
    public var requirement: RecipeParameterRequirement

    public init(_default: String? = nil, description: String, inputType: RecipeParameterInputType, key: String, options: [String]? = nil, requirement: RecipeParameterRequirement) {
        self._default = _default
        self.description = description
        self.inputType = inputType
        self.key = key
        self.options = options
        self.requirement = requirement
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _default = "default"
        case description
        case inputType = "input_type"
        case key
        case options
        case requirement
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_default, forKey: ._default)
        try container.encode(description, forKey: .description)
        try container.encode(inputType, forKey: .inputType)
        try container.encode(key, forKey: .key)
        try container.encodeIfPresent(options, forKey: .options)
        try container.encode(requirement, forKey: .requirement)
    }
}

