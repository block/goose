//
// SessionInsights.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SessionInsights: Codable, JSONEncodable, Hashable {

    public static let totalSessionsRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** Total number of sessions */
    public var totalSessions: Int
    /** Total tokens used across all sessions */
    public var totalTokens: Int64

    public init(totalSessions: Int, totalTokens: Int64) {
        self.totalSessions = totalSessions
        self.totalTokens = totalTokens
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case totalSessions
        case totalTokens
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(totalSessions, forKey: .totalSessions)
        try container.encode(totalTokens, forKey: .totalTokens)
    }
}

