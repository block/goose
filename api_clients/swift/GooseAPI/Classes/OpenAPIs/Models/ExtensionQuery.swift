//
// ExtensionQuery.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ExtensionQuery: Codable, JSONEncodable, Hashable {

    public var config: ExtensionConfig
    public var enabled: Bool
    public var name: String

    public init(config: ExtensionConfig, enabled: Bool, name: String) {
        self.config = config
        self.enabled = enabled
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case config
        case enabled
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(config, forKey: .config)
        try container.encode(enabled, forKey: .enabled)
        try container.encode(name, forKey: .name)
    }
}

