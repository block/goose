//
// RecipeManifestResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct RecipeManifestResponse: Codable, JSONEncodable, Hashable {

    public var id: String
    public var isGlobal: Bool
    public var lastModified: String
    public var name: String
    public var recipe: Recipe

    public init(id: String, isGlobal: Bool, lastModified: String, name: String, recipe: Recipe) {
        self.id = id
        self.isGlobal = isGlobal
        self.lastModified = lastModified
        self.name = name
        self.recipe = recipe
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case isGlobal
        case lastModified
        case name
        case recipe
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(isGlobal, forKey: .isGlobal)
        try container.encode(lastModified, forKey: .lastModified)
        try container.encode(name, forKey: .name)
        try container.encode(recipe, forKey: .recipe)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension RecipeManifestResponse: Identifiable {}
