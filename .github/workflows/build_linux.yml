# This is a **reuseable** workflow that bundles the Desktop App for macOS.
# It doesn't get triggered on its own. It gets used in multiple workflows:
#  - release.yml
#  - canary.yml
on:
  push:
    branches:
      - lifei/fixed-unstable-build-cli
  pull_request:
    branches:
      - lifei/fixed-unstable-build-cli
  workflow_dispatch:

name: "CLI Build for Linux"

jobs:
  build-cli:
    name: Build CLI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        architecture: ["x86_64"]
        include:
          - os: ubuntu-latest
            target-suffix: unknown-linux-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4


      - name: Update version in Cargo.toml
        run: |
          sed -i.bak 's/^version = ".*"/version = "1.0.24"/' Cargo.toml
          rm -f Cargo.toml.bak

      - name: Install cross
        run: source ./bin/activate-hermit && cargo install cross --git https://github.com/cross-rs/cross

      - name: Build CLI
        env:
          CROSS_NO_WARNINGS: 0
          RUST_LOG: debug
          RUST_BACKTRACE: 1
          CROSS_VERBOSE: 1
        run: |
          source ./bin/activate-hermit
          export TARGET="${{ matrix.architecture }}-${{ matrix.target-suffix }}"
          rustup default stable
          rustup target add "${TARGET}"
          echo "Building for target: ${TARGET}"
          echo "Rust toolchain info:"
          rustup show
          echo "Cross version:"
          cross --version

          echo "Building with explicit PROTOC path..."
          RUSTUP_HOME=/project/.hermit/rustup CARGO_HOME=/project/bin/cargo PROTOC=/project/bin/protoc cross build --release --target ${TARGET} -p goose-cli -vv

          # tar the goose binary as goose-<TARGET>.tar.bz2
          cd target/${TARGET}/release
          tar -cjf goose-${TARGET}.tar.bz2 goose
          echo "ARTIFACT=target/${TARGET}/release/goose-${TARGET}.tar.bz2" >> $GITHUB_ENV

      - name: Upload CLI artifact
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # pin@v4
        with:
          name: goose-${{ matrix.architecture }}-${{ matrix.target-suffix }}
          path: ${{ env.ARTIFACT }}