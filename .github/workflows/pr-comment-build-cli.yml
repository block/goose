# This workflow is triggered by a comment on an issue or PR with the text ".build-cli"
on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to comment on'
        required: true
        type: string

# permissions needed for reacting to IssueOps commands on PRs
permissions:
  pull-requests: write
  checks: read

name: Build CLI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  trigger-on-command:
    name: Trigger on ".build-cli" PR comment
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.command.outputs.continue || github.event_name == 'workflow_dispatch' }}
      pr_number: ${{ steps.command.outputs.issue_number || github.event.inputs.pr_number }}
      head_sha: ${{ steps.pr_info.outputs.head_sha || github.sha }}
    steps:
      - if: ${{ github.event_name == 'issue_comment' }}
        uses: github/command@v1.3.0
        id: command
        with:
          command: ".build-cli"
          skip_reviews: true
          reaction: "eyes"
          allowed_contexts: pull_request

      - name: Get PR info
        if: ${{ github.event_name == 'issue_comment' }}
        id: pr_info
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ steps.command.outputs.issue_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Extract head SHA from PR info
      - name: Set head SHA output
        if: ${{ github.event_name == 'issue_comment' }}
        run: echo "head_sha=$(echo '${{ steps.pr_info.outputs.data }}' | jq -r .head.sha)" >> $GITHUB_OUTPUT
        id: pr_info

  build-cli:
    needs: [trigger-on-command]
    if: ${{ needs.trigger-on-command.outputs.continue == 'true' }}
    uses: ./.github/workflows/build-cli.yml
    with:
      ref: ${{ needs.trigger-on-command.outputs.head_sha }}

  pr-comment-cli:
    name: PR Comment with CLI builds
    runs-on: ubuntu-latest
    needs: [trigger-on-command, build-cli]
    permissions:
      pull-requests: write

    steps:
      - name: Download CLI artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: goose-*
          path: cli-dist
          merge-multiple: true

      - name: Comment on PR with CLI download links
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ needs.trigger-on-command.outputs.pr_number }}
          body: |
            ### CLI Builds

            Download CLI builds for different platforms:
            - [ðŸ“¦ Linux (x86_64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-x86_64-unknown-linux-gnu.zip)
            - [ðŸ“¦ Linux (aarch64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-aarch64-unknown-linux-gnu.zip)
            - [ðŸ“¦ macOS (x86_64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-x86_64-apple-darwin.zip)
            - [ðŸ“¦ macOS (aarch64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-aarch64-apple-darwin.zip)

            These links are provided by nightly.link and will work even if you're not logged into GitHub.
  