# This workflow is triggered by a comment on an issue or PR with the text ".build-cli"
on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to comment on'
        required: true
        type: string

# permissions needed for reacting to IssueOps commands on PRs
permissions:
  pull-requests: write
  checks: read

name: Build CLI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  trigger-on-command:
    name: Trigger on ".build-cli" PR comment
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.command.outputs.continue || github.event_name == 'workflow_dispatch' }}
      pr_number: ${{ steps.command.outputs.issue_number || github.event.inputs.pr_number }}
    steps:
      - if: ${{ github.event_name == 'issue_comment' }}
        uses: github/command@v1.3.0
        id: command
        with:
          command: ".build-cli"
          skip_reviews: true
          reaction: "eyes"
          allowed_contexts: pull_request

  build-cli:
    needs: [trigger-on-command]
    if: ${{ needs.trigger-on-command.outputs.continue == 'true' }}
    name: Build CLI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        architecture: ["x86_64", "aarch64"]
        include:
          - os: ubuntu-latest
            target-suffix: unknown-linux-gnu
          - os: macos-latest
            target-suffix: apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.architecture }}-${{ matrix.target-suffix }}

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build CLI
        env:
          CROSS_NO_WARNINGS: 0
          RUST_LOG: debug
          RUST_BACKTRACE: 1
          CROSS_VERBOSE: 1
        run: |
          export TARGET="${{ matrix.architecture }}-${{ matrix.target-suffix }}"
          rustup target add "${TARGET}"
          echo "Building for target: ${TARGET}"
          echo "Rust toolchain info:"
          rustup show
          echo "Cross version:"
          cross --version

          # 'cross' is used to cross-compile for different architectures (see Cross.toml)
          cross build --release --target ${TARGET} -p goose-cli -vv

          # tar the goose binary as goose-<TARGET>.tar.bz2
          cd target/${TARGET}/release
          tar -cjf goose-${TARGET}.tar.bz2 goose
          echo "ARTIFACT=target/${TARGET}/release/goose-${TARGET}.tar.bz2" >> $GITHUB_ENV

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: goose-${{ matrix.architecture }}-${{ matrix.target-suffix }}
          path: ${{ env.ARTIFACT }}

  pr-comment-cli:
    name: PR Comment with CLI builds
    runs-on: ubuntu-latest
    needs: [trigger-on-command, build-cli]
    permissions:
      pull-requests: write

    steps:
      - name: Download CLI artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: goose-*
          path: cli-dist
          merge-multiple: true

      - name: Comment on PR with CLI download links
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ needs.trigger-on-command.outputs.pr_number }}
          body: |
            ### CLI Builds

            Download CLI builds for different platforms:
            - [ðŸ“¦ Linux (x86_64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-x86_64-unknown-linux-gnu.zip)
            - [ðŸ“¦ Linux (aarch64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-aarch64-unknown-linux-gnu.zip)
            - [ðŸ“¦ macOS (x86_64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-x86_64-apple-darwin.zip)
            - [ðŸ“¦ macOS (aarch64)](https://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}/goose-aarch64-apple-darwin.zip)

            These links are provided by nightly.link and will work even if you're not logged into GitHub.
  