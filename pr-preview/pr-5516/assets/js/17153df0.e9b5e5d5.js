"use strict";(self.webpackChunkgoose=self.webpackChunkgoose||[]).push([[6082],{46911:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"guides/goose-cli-commands","title":"CLI Commands","description":"Goose provides a command-line interface (CLI) with several commands for managing sessions, configurations and extensions. This guide covers all available CLI commands and interactive session features.","source":"@site/docs/guides/goose-cli-commands.md","sourceDirName":"guides","slug":"/guides/goose-cli-commands","permalink":"/goose/pr-preview/pr-5516/docs/guides/goose-cli-commands","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":35,"frontMatter":{"sidebar_position":35,"title":"CLI Commands","sidebar_label":"CLI Commands","toc_max_heading_level":4},"sidebar":"tutorialSidebar","previous":{"title":"Quick Tips","permalink":"/goose/pr-preview/pr-5516/docs/guides/tips"},"next":{"title":"Using Goosehints","permalink":"/goose/pr-preview/pr-5516/docs/guides/using-goosehints"}}');var r=n(74848),o=n(28453);const l={sidebar_position:35,title:"CLI Commands",sidebar_label:"CLI Commands",toc_max_heading_level:4},t=void 0,d={},c=[{value:"Flag Naming Conventions",id:"flag-naming-conventions",level:2},{value:"Core Commands",id:"core-commands",level:3},{value:"help",id:"help",level:4},{value:"configure",id:"configure",level:4},{value:"info [options]",id:"info-options",level:4},{value:"version",id:"version",level:4},{value:"update [options]",id:"update-options",level:4},{value:"Session Management",id:"session-management",level:3},{value:"session [options]",id:"session-options",level:4},{value:"session list [options]",id:"session-list-options",level:4},{value:"session remove [options]",id:"session-remove-options",level:4},{value:"session export [options]",id:"session-export-options",level:4},{value:"Task Execution",id:"task-execution",level:3},{value:"run [options]",id:"run-options",level:4},{value:"bench",id:"bench",level:4},{value:"recipe",id:"recipe",level:4},{value:"schedule",id:"schedule",level:4},{value:"mcp",id:"mcp",level:4},{value:"acp",id:"acp",level:4},{value:"Project Management",id:"project-management",level:3},{value:"project",id:"project",level:4},{value:"projects",id:"projects",level:4},{value:"Interface",id:"interface",level:3},{value:"web",id:"web",level:4},{value:"Interactive Session Features",id:"interactive-session-features",level:2},{value:"Slash Commands",id:"slash-commands",level:3},{value:"Themes",id:"themes",level:3},{value:"Navigation and Controls",id:"navigation-and-controls",level:2},{value:"Keyboard Shortcuts",id:"keyboard-shortcuts",level:3},{value:"Command History Search",id:"command-history-search",level:3}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Goose provides a command-line interface (CLI) with several commands for managing sessions, configurations and extensions. This guide covers all available CLI commands and interactive session features."}),"\n",(0,r.jsx)(s.h2,{id:"flag-naming-conventions",children:"Flag Naming Conventions"}),"\n",(0,r.jsx)(s.p,{children:"Goose CLI follows consistent patterns for flag naming to make commands intuitive and predictable:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-i, --session-id"})}),": Used for session identifiers (e.g., ",(0,r.jsx)(s.code,{children:"20250305_113223"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-i, --schedule-id"})}),": Used for schedule job identifiers (e.g., ",(0,r.jsx)(s.code,{children:"daily-report"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-n, --name"})}),": Used for human-readable names"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-p, --path"})}),": Used for file paths (legacy support)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-o, --output"})}),": Used for output file paths"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.code,{children:"-r, --resume"})," or ",(0,r.jsx)(s.code,{children:"-r, --regex"})]}),": Context-dependent (resume for sessions, regex for filters)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-v, --verbose"})}),": Used for verbose output"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-l, --limit"})}),": Used for limiting result counts"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-f, --format"})}),": Used for specifying output formats"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-w, --working-dir"})}),": Used for working directory filters"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Context determines whether ",(0,r.jsx)(s.code,{children:"-i"})," refers to a session ID or schedule ID. Within session commands, ",(0,r.jsx)(s.code,{children:"-i"})," always means session ID. Within schedule commands, ",(0,r.jsx)(s.code,{children:"-i"})," always means schedule ID."]}),"\n",(0,r.jsx)(s.h3,{id:"core-commands",children:"Core Commands"}),"\n",(0,r.jsx)(s.h4,{id:"help",children:"help"}),"\n",(0,r.jsx)(s.p,{children:"Display the help menu."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose --help\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"configure",children:"configure"}),"\n",(0,r.jsx)(s.p,{children:"Configure Goose settings - providers, extensions, etc."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose configure\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"info-options",children:"info [options]"}),"\n",(0,r.jsx)(s.p,{children:"Shows Goose information, including the version, configuration file location, session storage, and logs."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-v, --verbose"})}),": Show detailed configuration settings, including environment variables and enabled extensions"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose info\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"version",children:"version"}),"\n",(0,r.jsx)(s.p,{children:"Check the current Goose version you have installed."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose --version\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"update-options",children:"update [options]"}),"\n",(0,r.jsx)(s.p,{children:"Update the Goose CLI to a newer version."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--canary, -c"})}),": Update to the canary (development) version instead of the stable version"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--reconfigure, -r"})}),": Forces Goose to reset configuration settings during the update process"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Update to latest stable version\ngoose update\n\n# Update to latest canary version\ngoose update --canary\n\n# Update and reconfigure settings\ngoose update --reconfigure\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"session-management",children:"Session Management"}),"\n",(0,r.jsx)(s.h4,{id:"session-options",children:"session [options]"}),"\n",(0,r.jsx)(s.p,{children:"Start or resume interactive chat sessions."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Basic Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-i, --session-id <session_id>"})}),": Specify a session by its ID (e.g., '20250921_143022')"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-n, --name <name>"})}),": Give the session a name"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-p, --path <path>"})}),": Legacy parameter for specifying session by file path"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-r, --resume"})}),": Resume a previous session"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--debug"})}),": Enable debug mode to output complete tool responses, detailed parameter values, and full file paths"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--max-turns <NUMBER>"})}),": Set the maximum number of turns allowed without user input (default: 1000)"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Extension Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-extension <command>"})}),": Add stdio extensions"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-remote-extension <url>"})}),": Add remote extensions over SSE"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-streamable-http-extension <url>"})}),": Add remote extensions over Streaming HTTP"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-builtin <id>"})}),": Enable built-in extensions (e.g., 'developer', 'computercontroller')"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Start a basic session\ngoose session -n my-project\n\n# Resume a previous session\ngoose session --resume -n my-project\ngoose session --resume -i 2025250620_013617\ngoose session --resume -p ./session.jsonl\n\n# Start with extensions\ngoose session --with-extension "npx -y @modelcontextprotocol/server-memory"\ngoose session --with-builtin developer\ngoose session --with-remote-extension "http://localhost:8080/sse"\n\n# Advanced: Mix multiple extension types\ngoose session \\\n  --with-extension "echo hello" \\\n  --with-remote-extension "http://sse.example.com/sse" \\\n  --with-streamable-http-extension "http://http.example.com" \\\n  --with-builtin "developer"\n\n# Control session behavior\ngoose session -n my-session --debug --max-turns 25\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"session-list-options",children:"session list [options]"}),"\n",(0,r.jsx)(s.p,{children:"List all saved sessions."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-v, --verbose"})}),": Include session file paths in the output"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-f, --format <format>"})}),": Specify output format (",(0,r.jsx)(s.code,{children:"text"})," or ",(0,r.jsx)(s.code,{children:"json"}),"). Default is ",(0,r.jsx)(s.code,{children:"text"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--ascending"})}),": Sort sessions by date in ascending order (oldest first)"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# List all sessions in text format (default)\ngoose session list\n\n# List sessions with file paths\ngoose session list --verbose\n\n# List sessions in JSON format\ngoose session list --format json\n\n# Sort sessions by date in ascending order\ngoose session list --ascending\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"session-remove-options",children:"session remove [options]"}),"\n",(0,r.jsx)(s.p,{children:"Remove one or more saved sessions."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-i, --session-id <session_id>"})}),": Remove a specific session by its session ID"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-n, --name <name>"})}),": Remove a specific session by its name"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-r, --regex <pattern>"})}),": Remove sessions matching a regex pattern"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Remove a specific session by ID\ngoose session remove -i 20250305_113223\n\n# Remove a specific session by its name\ngoose session remove -n my-session\n\n# Remove all sessions starting with "project-"\ngoose session remove -r "project-.*"\n\n# Remove all sessions containing "migration"\ngoose session remove -r ".*migration.*"\n'})}),"\n",(0,r.jsx)(s.admonition,{type:"caution",children:(0,r.jsx)(s.p,{children:"Session removal is permanent and cannot be undone. Goose will show which sessions will be removed and ask for confirmation before deleting."})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"session-export-options",children:"session export [options]"}),"\n",(0,r.jsx)(s.p,{children:"Export sessions in different formats for backup, sharing, migration, or documentation purposes."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-i, --session-id <session_id>"})}),": Export a specific session by session ID"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-n, --name <name>"})}),": Export a specific session by name"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-p, --path <path>"})}),": Export a specific session by file path (legacy)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-o, --output <file>"})}),": Save exported content to a file (default: stdout)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--format <format>"})}),": Output format: ",(0,r.jsx)(s.code,{children:"markdown"}),", ",(0,r.jsx)(s.code,{children:"json"}),", ",(0,r.jsx)(s.code,{children:"yaml"}),". Default is ",(0,r.jsx)(s.code,{children:"markdown"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Export Formats:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"json"})}),": Complete session backup preserving all data including conversation history, metadata, and settings"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"yaml"})}),": Complete session backup in YAML format"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"markdown"})}),": Default format that creates a formatted, readable version of the conversation for documentation and sharing"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Interactive export\ngoose session export\n\n# Export specific session as JSON for backup\ngoose session export -n my-session --format json -o session-backup.json\n\n# Export specific session as readable markdown\ngoose session export -n my-session -o session.md\n\n# Export to stdout in different formats\ngoose session export -i 20250305_113223 --format json\ngoose session export -n my-session --format yaml\n\n# Export session by path (legacy)\ngoose session export -p ./my-session.jsonl -o exported.md\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"task-execution",children:"Task Execution"}),"\n",(0,r.jsx)(s.h4,{id:"run-options",children:"run [options]"}),"\n",(0,r.jsxs)(s.p,{children:["Execute commands from an instruction file or stdin. Check out the ",(0,r.jsx)(s.a,{href:"/docs/guides/running-tasks",children:"full guide"})," for more info."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Input Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-i, --instructions <FILE>"})}),": Path to instruction file containing commands. Use ",(0,r.jsx)(s.code,{children:"-"})," for stdin"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-t, --text <TEXT>"})}),": Input text to provide to Goose directly"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--recipe <RECIPE_FILE_NAME> <OPTIONS>"})}),": Load a custom recipe in current session"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Session Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-s, --interactive"})}),": Continue in interactive mode after processing initial input"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-n, --name <name>"})}),": Name for this run session (e.g. ",(0,r.jsx)(s.code,{children:"daily-tasks"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-r, --resume"})}),": Resume from a previous run"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-p, --path <PATH>"})}),": Path for this run session (e.g. ",(0,r.jsx)(s.code,{children:"./playground.jsonl"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--no-session"})}),": Run goose commands without creating or storing a session file"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Extension Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-extension <COMMAND>"})}),": Add stdio extensions (can be used multiple times)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-remote-extension <URL>"})}),": Add remote extensions over SSE (can be used multiple times)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-streamable-http-extension <URL>"})}),": Add remote extensions over Streaming HTTP (can be used multiple times)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--with-builtin <name>"})}),": Add builtin extensions by name (e.g., 'developer' or multiple: 'developer,github')"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Control Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--debug"})}),": Output complete tool responses, detailed parameter values, and full file paths"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--max-turns <NUMBER>"})}),": Maximum number of turns allowed without user input (default: 1000)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--explain"})}),": Show a recipe's title, description, and parameters"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--provider"})}),": Specify the provider to use for this session (overrides environment variable)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--model"})}),": Specify the model to use for this session (overrides environment variable)"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'# Run from instruction file\ngoose run --instructions plan.md\n\n# Load a recipe with a prompt that Goose executes and then exits  \ngoose run --recipe recipe.yaml\n\n# Load a recipe and stay in an interactive session\ngoose run --recipe recipe.yaml --interactive\n\n# Load a recipe in debug mode\ngoose run --recipe recipe.yaml --debug\n\n# Show recipe details\ngoose run --recipe recipe.yaml --explain\n\n# Run instructions from a file without session storage\ngoose run --no-session -i instructions.txt\n\n# Run with a specified provider and model\ngoose run --provider anthropic --model claude-4-sonnet -t "initial prompt"\n\n# Run with limited turns before prompting user\ngoose run --recipe recipe.yaml --max-turns 10\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"bench",children:"bench"}),"\n",(0,r.jsxs)(s.p,{children:["Used to evaluate system-configuration across a range of practical tasks. See the ",(0,r.jsx)(s.a,{href:"/docs/tutorials/benchmarking",children:"detailed guide"})," for more information."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose bench ...etc.\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"recipe",children:"recipe"}),"\n",(0,r.jsx)(s.p,{children:"Used to validate recipe files, manage recipe sharing, list available recipes, and open recipes in goose desktop."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Commands:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"deeplink <RECIPE_NAME>"})}),": Generate a shareable link for a recipe file"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"list [OPTIONS]"})}),": List all available recipes from local directories and configured GitHub repositories","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--format <FORMAT>"})}),": Output format (",(0,r.jsx)(s.code,{children:"text"})," or ",(0,r.jsx)(s.code,{children:"json"}),"). Default is ",(0,r.jsx)(s.code,{children:"text"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-v, --verbose"})}),": Show verbose information including recipe titles and full file paths"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"open <RECIPE_NAME>"})}),": Open a recipe file directly in goose desktop"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"validate <RECIPE_NAME>"})}),": Validate a recipe file"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Generate a shareable link\ngoose recipe deeplink my-recipe.yaml\n\n# List all available recipes\ngoose recipe list\n\n# List recipes with detailed information\ngoose recipe list --verbose\n\n# List recipes in JSON format for automation\ngoose recipe list --format json\n\n# Open a recipe in goose desktop\ngoose recipe open my-recipe.yaml\n\n# Open a recipe by name\ngoose recipe open my-recipe\n\n# Validate a recipe file\ngoose recipe validate my-recipe.yaml\n\n# Get help about recipe commands\ngoose recipe help\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"schedule",children:"schedule"}),"\n",(0,r.jsxs)(s.p,{children:["Automate recipes by running them on a ",(0,r.jsx)(s.a,{href:"/goose/pr-preview/pr-5516/docs/guides/recipes/session-recipes#schedule-recipe",children:"schedule"}),"."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Commands:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"add <OPTIONS>"}),": Create a new scheduled job. Copies the current version of the recipe to ",(0,r.jsx)(s.code,{children:"~/.local/share/goose/scheduled_recipes"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"list"}),": View all scheduled jobs"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"remove"}),": Delete a scheduled job"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"sessions"}),": List sessions created by a scheduled recipe"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"run-now"}),": Run a scheduled recipe immediately"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"-i, --schedule-id <NAME>"}),": A unique ID for the scheduled job (e.g. ",(0,r.jsx)(s.code,{children:"daily-report"}),")"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:'--cron "* * * * * *"'}),": Specifies when a job should run using a ",(0,r.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Cron#Cron_expression",children:"cron expression"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"--recipe-source <PATH>"}),": Path to the recipe YAML file"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"-l, --limit <NUMBER>"}),": Max number of sessions to display when using the ",(0,r.jsx)(s.code,{children:"sessions"})," command"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'goose schedule <COMMAND>\n\n# Add a new scheduled recipe which runs every day at 9 AM\ngoose schedule add -i daily-report --cron "0 0 9 * * *" --recipe-source ./recipes/daily-report.yaml\n\n# List all scheduled jobs\ngoose schedule list\n\n# List the 10 most recent Goose sessions created by a scheduled job\ngoose schedule sessions -i daily-report -l 10\n\n# Run a recipe immediately\ngoose schedule run-now -i daily-report\n\n# Remove a scheduled job\ngoose schedule remove -i daily-report\n'})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"mcp",children:"mcp"}),"\n",(0,r.jsxs)(s.p,{children:["Run an enabled MCP server specified by ",(0,r.jsx)(s.code,{children:"<name>"})," (e.g. ",(0,r.jsx)(s.code,{children:"'Google Drive'"}),")."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose mcp <name>\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"acp",children:"acp"}),"\n",(0,r.jsx)(s.p,{children:"Run Goose as an Agent Client Protocol (ACP) agent server over stdio. This enables Goose to work with ACP-compatible clients like Zed."}),"\n",(0,r.jsx)(s.p,{children:"ACP is an emerging protocol specification that standardizes communication between AI agents and client applications, making it easier for clients to integrate with various AI agents."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose acp\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["This command is automatically invoked by ACP-compatible clients and is not typically run directly by users. The client manages the lifecycle of the ",(0,r.jsx)(s.code,{children:"goose acp"})," process. See ",(0,r.jsx)(s.a,{href:"/docs/guides/acp-clients",children:"Using Goose in ACP Clients"})," for details."]})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"project-management",children:"Project Management"}),"\n",(0,r.jsx)(s.h4,{id:"project",children:"project"}),"\n",(0,r.jsxs)(s.p,{children:["Start working on your last project or create a new one. For detailed usage examples and workflows, see ",(0,r.jsx)(s.a,{href:"/docs/guides/managing-projects",children:"Managing Projects Guide"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Alias"}),": ",(0,r.jsx)(s.code,{children:"p"})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose project\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h4,{id:"projects",children:"projects"}),"\n",(0,r.jsx)(s.p,{children:"Choose one of your projects to start working on."}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Alias"}),": ",(0,r.jsx)(s.code,{children:"ps"})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"goose projects\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"interface",children:"Interface"}),"\n",(0,r.jsx)(s.h4,{id:"web",children:"web"}),"\n",(0,r.jsx)(s.p,{children:"Start a new session in Goose Web, a lightweight web-based interface launched via the CLI that mirrors the desktop app's chat experience."}),"\n",(0,r.jsx)(s.p,{children:"Goose Web is particularly useful when:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"You want to access Goose with a graphical interface without installing the desktop app"}),"\n",(0,r.jsx)(s.li,{children:"You need to use Goose from different devices, including mobile"}),"\n",(0,r.jsx)(s.li,{children:"You're working in an environment where installing desktop apps isn't practical"}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"warning",children:(0,r.jsx)(s.p,{children:"Don't expose the web interface to the internet without proper security measures."})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"-p, --port <PORT>"})}),": Port number to run the web server on. Default is ",(0,r.jsx)(s.code,{children:"3000"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--host <HOST>"})}),": Host to bind the web server to. Default is ",(0,r.jsx)(s.code,{children:"127.0.0.1"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"--open"})}),": Automatically open the browser when the server starts"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Start web interface at `http://127.0.0.1:3000` and open the browser\ngoose web --open\n\n# Start web interface at `http://127.0.0.1:8080` \ngoose web --port 8080\n\n# Start web interface accessible from local network at `http://192.168.1.7:8080`\ngoose web --host 192.168.1.7 --port 8080\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["Use ",(0,r.jsx)(s.code,{children:"Ctrl+C"})," to stop the server."]})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Limitations:"})}),"\n",(0,r.jsx)(s.p,{children:"While the web interface provides most core features, be aware of these limitations:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Some file system operations may require additional confirmation"}),"\n",(0,r.jsx)(s.li,{children:"Extension management must be done through the CLI"}),"\n",(0,r.jsx)(s.li,{children:"Certain tool interactions might need extra setup"}),"\n",(0,r.jsx)(s.li,{children:"Configuration changes require a server restart"}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"interactive-session-features",children:"Interactive Session Features"}),"\n",(0,r.jsx)(s.h3,{id:"slash-commands",children:"Slash Commands"}),"\n",(0,r.jsxs)(s.p,{children:["Once you're in an interactive session (via ",(0,r.jsx)(s.code,{children:"goose session"})," or ",(0,r.jsx)(s.code,{children:"goose run --interactive"}),"), you can use these slash commands. All commands support tab completion. Press ",(0,r.jsx)(s.code,{children:"/ + <Tab>"})," to cycle through available commands."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Available Commands:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.code,{children:"/?"})," or ",(0,r.jsx)(s.code,{children:"/help"})]})," - Display the help menu"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/builtin <names>"})})," - Add builtin extensions by name (comma-separated)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/clear"})})," - Clear the current chat history"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/endplan"})})," - Exit plan mode and return to 'normal' goose mode"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.code,{children:"/exit"})," or ",(0,r.jsx)(s.code,{children:"/quit"})]})," - Exit the session"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/extension <command>"})})," - Add a stdio extension (format: ENV1=val1 command args...)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/mode <name>"})})," - Set the goose mode to use ('auto', 'approve', 'chat', 'smart_approve')"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/plan <message_text>"})})," - Enter 'plan' mode with optional message. Create a plan based on the current messages and ask user if they want to act on it"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/prompt <n> [--info] [key=value...]"})})," - Get prompt info or execute a prompt"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/prompts [--extension <name>]"})})," - List all available prompts, optionally filtered by extension"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/recipe [filepath]"})})," - Generate a recipe from the current conversation and save it to the specified filepath (must end with .yaml). If no filepath is provided, it will be saved to ./recipe.yaml"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/summarize"})})," - Summarize the current conversation to reduce context length while preserving key information"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/t"})})," - Toggle between ",(0,r.jsx)(s.code,{children:"light"}),", ",(0,r.jsx)(s.code,{children:"dark"}),", and ",(0,r.jsx)(s.code,{children:"ansi"})," themes. ",(0,r.jsx)(s.a,{href:"#themes",children:"More info"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"/t <name>"})})," - Set theme directly (light, dark, ansi)"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Create a plan for triaging test failures\n/plan let's create a plan for triaging test failures\n\n# List all prompts from the developer extension\n/prompts --extension developer\n\n# Switch to chat mode\n/mode chat\n\n# Add a builtin extension during the session\n/builtin developer\n\n# Clear the current conversation history\n/clear\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"themes",children:"Themes"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"/t"})," command controls the syntax highlighting theme for markdown content in Goose CLI responses. This affects the styles used for headers, code blocks, bold/italic text, and other markdown elements in the response output."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Commands:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"/t"})," - Cycles through themes: ",(0,r.jsx)(s.code,{children:"light"})," \u2192 ",(0,r.jsx)(s.code,{children:"dark"})," \u2192 ",(0,r.jsx)(s.code,{children:"ansi"})," \u2192 ",(0,r.jsx)(s.code,{children:"light"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"/t light"})," - Sets ",(0,r.jsx)(s.code,{children:"light"})," theme (subtle light colors)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"/t dark"})," - Sets ",(0,r.jsx)(s.code,{children:"dark"})," theme (subtle darker colors)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"/t ansi"})," - Sets ",(0,r.jsx)(s.code,{children:"ansi"})," theme (most visually distinct option with brighter colors)"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Configuration:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The default theme is ",(0,r.jsx)(s.code,{children:"dark"})]}),"\n",(0,r.jsxs)(s.li,{children:["The theme setting is saved to the ",(0,r.jsx)(s.a,{href:"/docs/guides/config-files",children:"configuration file"})," as ",(0,r.jsx)(s.code,{children:"GOOSE_CLI_THEME"})," and persists between sessions"]}),"\n",(0,r.jsxs)(s.li,{children:["The saved configuration can be overridden for the session using the ",(0,r.jsx)(s.code,{children:"GOOSE_CLI_THEME"})," ",(0,r.jsx)(s.a,{href:"/docs/guides/environment-variables#session-management",children:"environment variable"})]}),"\n"]}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsxs)(s.p,{children:["Syntax highlighting styles only affect the font, not the overall terminal interface. The ",(0,r.jsx)(s.code,{children:"light"})," and ",(0,r.jsx)(s.code,{children:"dark"})," themes have subtle differences in font color and weight."]}),(0,r.jsx)(s.p,{children:"The Goose CLI theme is independent from the Goose Desktop theme."})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Set ANSI theme for the session via environment variable\nexport GOOSE_CLI_THEME=ansi\ngoose session --name use-custom-theme\n\n# Toggle theme during a session\n/t\n\n# Set the light theme during a session\n/t light\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"navigation-and-controls",children:"Navigation and Controls"}),"\n",(0,r.jsx)(s.h3,{id:"keyboard-shortcuts",children:"Keyboard Shortcuts"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Session Control:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"Ctrl+C"})})," - Interrupt the current request"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"Ctrl+J"})})," - Add a newline"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Navigation:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"Cmd+Up/Down arrows"})})," - Navigate through command history"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.code,{children:"Ctrl+R"})})," - Interactive command history search (reverse search). ",(0,r.jsx)(s.a,{href:"#command-history-search",children:"More info"}),"."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"command-history-search",children:"Command History Search"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"Ctrl+R"})," shortcut provides interactive search through your stored CLI ",(0,r.jsx)(s.a,{href:"/docs/guides/logs#command-history",children:"command history"}),". This feature makes it easy to find and reuse recent commands without retyping them. When you type a search term, Goose searches backwards through your history for matches."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"How it works:"})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["Press ",(0,r.jsx)(s.code,{children:"Ctrl+R"})," in your Goose CLI session"]}),"\n",(0,r.jsx)(s.li,{children:"Type a search term"}),"\n",(0,r.jsxs)(s.li,{children:["Navigate through the results using:","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Ctrl+R"})," to cycle backwards through earlier matches"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Ctrl+S"})," to cycle forward through newer matches"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Press ",(0,r.jsx)(s.code,{children:"Return"})," (or ",(0,r.jsx)(s.code,{children:"Enter"}),") to run the found command, or ",(0,r.jsx)(s.code,{children:"Esc"})," to cancel"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"For example, instead of retyping this long command:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"analyze the performance issues in the sales database queries and suggest optimizations\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Use the ",(0,r.jsx)(s.code,{children:'"sales database"'})," or ",(0,r.jsx)(s.code,{children:'"optimization"'})," search term to find and rerun it."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Search tips:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Distinctive terms work best"}),": Choose unique words or phrases to help filter the results"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Partial matches and multiple words are supported"}),": You can search for phrases like ",(0,r.jsx)(s.code,{children:'"gith"'})," and ",(0,r.jsx)(s.code,{children:'"run the unit test"'})]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>t});var i=n(96540);const r={},o=i.createContext(r);function l(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);